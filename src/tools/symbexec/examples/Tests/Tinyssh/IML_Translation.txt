in c, a_63 
if R5_140 = R4_137 then
!(
in c, a_429 
if c_0 = a_429 then
event bad  
)
new SKey_661 fixed_64 
let sk_663 = kgen(g,SKey_661) in
out c, sk_663 
let kAB_665 = kgen(a_429,SKey_661) in
let HMAC_671 = hash3(a_429,sk_663,pkS) in
event AcceptS pkS pkP 
let signature_677 = sign(inputs,skS) in
out c, sign(inputs,skS) 
let kPS_681 = kdfPtoS(kAB_665,HMAC_671) in
let kSP_685 = kdfStoP(kAB_665,HMAC_671) in
let Dec_688 = dec(a_429,kPS_681) in
let Enc_691 = enc(Dec_688,kSP_685) in
out c, Enc_691 
if R3_943 = R2_946 then
in c, a_5062 
if R1_5075 = c_5 then
if R3_5141 = R2_5144 then
!(
in c, a_5161 
if c_0 = a_5161 then
event bad  
let Pars1_5165 = pars1(a_5161) in
if c_50 ≠ Pars1_5165 then
event bad  
let Pars2_5171 = pars2(a_5161) in
if c_256 <= Pars2_5171 then
event bad  
)
if R3_5283 = R2_5286 then
if R3_5325 = R2_5328 then
if R3_5485 = R2_5488 then
if R3_5608 = R2_5611 then
if R3_5650 = R2_5653 then
if R3_5720 = R2_5723 then
if R3_5762 = R2_5765 then
if (¬(R23_5941-R8_5938) < c_0 = (R23_5941-R8_5938) < c_0 = R8_5938 <= R23_5941∨R23_5941 = R8_5938) then
if R3_6054 = R2_6057 then
if R3_6096 = R2_6099 then
let Dec_6147 = dec(a_5161,kPS_681) in
let Ver_6151 = verify(Dec_6147,pkP) in
if Ver_6151 = c_1 then
event AcceptS2 pkS pkP 
if R3_6176 = R2_6179 then
if R3_6199 = R2_6202 then
if R3_6218 = R2_6221 then
if (¬(R23_6336-R8_6333) < c_0 = (R23_6336-R8_6333) < c_0 = R8_6333 <= R23_6336∨R23_6336 = R8_6333) then
if R3_6449 = R2_6452 then
if R3_6491 = R2_6494 then
let Dec_6542 = dec(a_5161,kPS_681) in
let Ver_6546 = verify(Dec_6542,pkP) in
if Ver_6546 = c_1 then
event AcceptS2 pkS pkP 
if R3_6571 = R2_6574 then
if R3_6594 = R2_6597 then
