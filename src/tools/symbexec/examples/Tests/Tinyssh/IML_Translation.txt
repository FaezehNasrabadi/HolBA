in c, a_63 
if R5_140 = R4_137 then
!N(
in c, a_429 
if c_0 = a_429 then
event bad  
)
new SKey_661 fixed_64 
let sk_663 = kgen(g,SKey_661) in
out c, sk_663 
let kAB_665 = kgen(a_429,SKey_661) in
let HMAC_671 = hash3(a_429,sk_663,pkS) in
event AcceptS pkS pkP 
let signature_677 = sign(inputs,skS) in
out c, sign(inputs,skS) 
let kPS_681 = kdfPtoS(kAB_665,HMAC_671) in
let kSP_685 = kdfStoP(kAB_665,HMAC_671) in
in c, a_689 
let Dec_690 = dec(a_689,kPS_681) in
let Enc_693 = enc(Dec_690,kSP_685) in
out c, Enc_693 
if R3_945 = R2_948 then
in c, a_5074 
if R1_5087 = c_5 then
if R3_5153 = R2_5156 then
!N(
in c, a_5173 
if c_0 = a_5173 then
event bad  
let Pars1_5177 = pars1(a_5173) in
if c_50 ≠ Pars1_5177 then
event bad  
let Pars2_5183 = pars2(a_5173) in
if c_256 <= Pars2_5183 then
event bad  
)
if R3_5295 = R2_5298 then
if R3_5539 = R2_5542 then
if R3_5620 = R2_5623 then
if R3_5662 = R2_5665 then
if R3_5732 = R2_5735 then
if R3_5774 = R2_5777 then
if (¬(R23_5953-R8_5950) < c_0 = (R23_5953-R8_5950) < c_0 = R8_5950 <= R23_5953∨R23_5953 = R8_5950) then
if R3_6066 = R2_6069 then
if R3_6108 = R2_6111 then
in c, a_6160 
let Dec_6161 = dec(a_6160,kPS_681) in
let Ver_6165 = verify(Dec_6161,pkP) in
if Ver_6165 = c_1 then
event AcceptS2 pkS pkP 
if R3_6190 = R2_6193 then
if R3_6213 = R2_6216 then
if R3_6232 = R2_6235 then
if (¬(R23_6350-R8_6347) < c_0 = (R23_6350-R8_6347) < c_0 = R8_6347 <= R23_6350∨R23_6350 = R8_6347) then
if R3_6463 = R2_6466 then
if R3_6505 = R2_6508 then
in c, a_6557 
let Dec_6558 = dec(a_6557,kPS_681) in
let Ver_6562 = verify(Dec_6558,pkP) in
if Ver_6562 = c_1 then
event AcceptS2 pkS pkP 
if R3_6610 = R2_6613 then
if R3_6633 = R2_6636 then
